---
name: "Main Workflow"
on: push
jobs:
  main:
    name: "Main"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: "Checkout Source Code"
        uses: actions/checkout@v4

      - name: "Setup Node"
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: "Install Dependencies"
        run: npm ci

      - name: "Lint"
        run: npx ng lint

      - name: "Build"
        run: npx ng build

      - name: "Test"
        run: npx ng test --watch=false --browsers=ChromeHeadless

      - name: "E2E Test"
        uses: cypress-io/github-action@v6
        with:
          start: npx ng serve

      - name: "Release"
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          context: git
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=match,pattern=(\d+)\.\d+\.\d+,group=1,value=${{ env.RELEASE_VERSION }}
            type=match,pattern=(\d+\.\d+)\.\d+,group=1,value=${{ env.RELEASE_VERSION }}
            type=raw,value=${{ env.RELEASE_VERSION }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
